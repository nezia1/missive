name: Missive
on:
  push:
    branches:
      - main
      - 'refs/tags/*'
      - 'refs/heads/*'
  pull_request:

jobs:
  server-unit-tests:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
    env:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      DATABASE_URL: postgres://test:test@localhost:5432/test
      COOKIE_SECRET: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'

      - name: Install dependencies
        run: |
          cd server
          npm install
          npx prisma generate
          npx prisma migrate deploy
          npx prisma db seed
          openssl genpkey -algorithm RSA -out private_key.pem -pkeyopt rsa_keygen_bits:2048
          openssl rsa -pubout -in private_key.pem -out public_key.pem

      - name: Run tests
        run: npm test
        working-directory: server

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: server-test-results
          path: server/report.xml

  client-unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'

      - name: Install dependencies
        run: |
          cd client
          flutter pub get
          dart pub global activate junitreport

      - name: Run tests
        run: |
          cd client
          flutter test --machine | dart pub global run junitreport:tojunit --output junit-report.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: client-test-results
          path: client/junit-report.xml

  build-client-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'

      - name: Build documentation
        run: |
          cd client
          dart doc --output='public'

      - name: Prepare combined directory for client docs
        run: |
          mkdir -p combined/client-api
          mv client/public/* combined/client-api/

      - name: Upload client documentation
        uses: actions/upload-artifact@v4
        with:
          name: client-docs
          path: combined/client-api

  build-server-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Prepare Python environment
        run: |
          cd documentation
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install mkdocs

      - name: Build documentation
        run: |
          cd documentation
          source venv/bin/activate
          mkdocs build --verbose --site-dir public

      - name: Prepare combined directory for server docs
        run: |
          mkdir -p combined
          mv documentation/public/* combined/

      - name: Upload server documentation
        uses: actions/upload-artifact@v4
        with:
          name: server-docs
          path: combined

  combine-artifacts:
    runs-on: ubuntu-latest
    needs: [build-client-docs, build-server-docs]
    steps:
      - name: Download client documentation
        uses: actions/download-artifact@v4
        with:
          name: client-docs
          path: combined/client-api
          
      - name: Download server documentation
        uses: actions/download-artifact@v4
        with:
          name: server-docs
          path: combined

      - name: Upload combined documentation
        uses: actions/upload-pages-artifact@v3
        with:
          path: combined

  deploy:
    runs-on: ubuntu-latest
    needs: combine-artifacts
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
