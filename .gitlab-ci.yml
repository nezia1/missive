image: python:3.10-bullseye

stages:
  - test
  - build
  - deploy

variables:
  PIP_CACHE_DIR: '$CI_PROJECT_DIR/.cache/pip'

.prepare_python_docs: &prepare_python_docs
  - cd documentation
  - python3 -m venv venv
  - source venv/bin/activate
  - pip install --upgrade pip
  - pip install -r requirements.txt

server_unit_tests:
  image: node:latest
  stage: test
  services:
    - name: postgres:13
      alias: db
  variables: 
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test
    DATABASE_URL: postgres://test:test@db:5432/test
    COOKIE_SECRET: test
  before_script:
    - cd server
    - npm install
    - npx prisma generate
    - npx prisma migrate deploy
    - npx prisma db seed
    - openssl genpkey -algorithm RSA -out private_key.pem -pkeyopt rsa_keygen_bits:2048
    - openssl rsa -pubout -in private_key.pem -out public_key.pem
  script:
    - npm test
  artifacts:
    reports:
      junit: server/report.xml
  rules:
    - changes:
      - server/**/*

    

flutter_unit_tests:
  image: ghcr.io/cirruslabs/flutter:3.19.6
  stage: test
  script:
    - cd client
    - flutter pub get
    - dart pub global activate junitreport
    - flutter test --machine | dart pub global run junitreport:tojunit --output junit-report.xml
  artifacts:
    when: always
    reports:
      junit: client/junit-report.xml
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - .pub-cache/
  rules:
    - changes:
      - client/**/*

build_flutter_docs:
  image: ghcr.io/cirruslabs/flutter:3.19.6
  stage: build
  cache:
    key: '${CI_COMMIT_REF_SLUG}-dart'
    paths:
      - .pub-cache
  script:
    - cd client
    - dart doc --output='public'
  artifacts:
    paths:
      - client/public

build_mkdocs:
  stage: build
  cache:
    key: '${CI_COMMIT_REF_SLUG}-mkdocs'
    paths:
      - '.cache/pip'
  variables:
    ENABLE_PDF_EXPORT: 1
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_SUBMODULE_FORCE_HTTPS: 'true'
  script:
    - *prepare_python_docs
    - 'mkdocs build --verbose --site-dir public'
  artifacts:
    paths:
      - documentation/public
  dependencies:
    - build_flutter_docs

pages:
  stage: deploy
  script:
    - mkdir -p public/client-api
    - if [ -d documentation/public ]; then cp -r documentation/public/* public/; fi
    - if [ -d client/public ]; then cp -r client/public/* public/client-api/; fi
  artifacts:
    paths:
      - public
